{"version":3,"sources":["services/notes_phonebook.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","value","onChangeFunction","onChange","PersonForm","name","number","nameOnChange","numberOnChange","onSubmission","onSubmit","type","Persons","persons","deleteFunction","map","person","i","key","style","display","data-key","data-name","onClick","height","marginLeft","marginTop","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newSearch","setSearch","peopleToShow","setVisibleNames","errorMessage","setErrorMessage","notificationName","setNotificationName","useEffect","noteService","initialPersons","Notification","message","className","event","target","searchTerm","filteredPersons","filter","toLowerCase","indexOf","preventDefault","nameMatch","find","newPerson","window","confirm","updatedPerson","setTimeout","catch","error","addedPerson","concat","dataset","_","updatedList","n","ReactDOM","render","document","getElementById"],"mappings":"2NACMA,EAAU,eAwBD,EAtBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAoB9B,EAjBA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAe5B,EAZA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAU5B,EAPK,SAACG,GAEnB,OADgBP,IAAMS,OAAN,UAAgBV,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAClB,OAAOA,EAASC,SCjBdM,G,MAAS,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,iBACtB,OACE,2BAAOD,MAAOA,EAAOE,SAAUD,MAI7BE,EAAa,SAAC,GAAgE,IAA/DC,EAA8D,EAA9DA,KAAMC,EAAwD,EAAxDA,OAAQC,EAAgD,EAAhDA,aAAcC,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,aAC/D,OACE,6BACE,0BAAMC,SAAUD,GACd,sCACM,2BAAOR,MAAOI,EAAMF,SAAUI,KAEpC,wCACQ,2BAAON,MAAOK,EAAQH,SAAUK,KAExC,4BAAQG,KAAK,UAAb,UAMFC,EAAU,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,eACzB,OACE,6BACGD,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACX,yBAAKC,IAAKD,EAAGE,MAAO,CAACC,QAAS,SAC5B,2BAAKJ,EAAOX,KAAZ,IAAmBW,EAAOV,OAA1B,KACA,4BACAe,WAAUL,EAAOnB,GACjByB,YAAWN,EAAOX,KAClBkB,QAAST,EACTK,MAAO,CAACK,OAAQ,OAAQC,WAAY,OAAQC,UAAW,SAJvD,gBAiJKC,EAtIH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTf,EADS,KACAgB,EADA,OAEgBD,mBAAS,IAFzB,mBAERE,EAFQ,KAECC,EAFD,OAGmBH,mBAAS,IAH5B,mBAGRI,EAHQ,KAGGC,EAHH,OAIgBL,mBAAS,IAJzB,mBAIRM,EAJQ,KAIGC,EAJH,OAKyBP,mBAASf,GALlC,mBAKRuB,EALQ,KAKMC,EALN,OAMyBT,mBAAS,MANlC,mBAMRU,EANQ,KAMMC,EANN,OAOgCX,mBAAS,MAPzC,mBAOTY,EAPS,KAOSC,EAPT,KAShBC,qBAAU,WACRC,IAEGnD,MAAK,SAAAoD,GACJf,EAAWe,GACXP,EAAgBO,QAElB,IAEJ,IA4DMC,EAAe,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAC/B,OAAgB,OAAZD,EACK,KAIP,yBAAKC,UAAWA,GACbD,IA0BP,OACE,6BACE,kBAACD,EAAD,CAAcC,QAASN,EAAkBO,UAAW,iBACpD,kBAACF,EAAD,CAAcC,QAASR,EAAcS,UAAW,UAChD,yCACA,oDACA,kBAAC,EAAD,CAAQ9C,MAAOiC,EAAWhC,iBA9CT,SAAC8C,GACpBb,EAAUa,EAAMC,OAAOhD,OACvB,IAAMiD,EAAaF,EAAMC,OAAOhD,MAC1BkD,EAAkBtC,EAAQuC,QAAO,SAAApC,GAAM,OAAoE,IAAhEA,EAAOX,KAAKgD,cAAcC,QAAQJ,EAAWG,kBAC9FhB,EAAgBc,MA2Cd,oDACA,kBAAC,EAAD,CACE9C,KAAMyB,EACNxB,OAAQ0B,EACRzB,aA3DmB,SAACyC,GACxBjB,EAAWiB,EAAMC,OAAOhD,QA2DpBO,eAxDqB,SAACwC,GAC1Bf,EAAae,EAAMC,OAAOhD,QAwDtBQ,aA1GU,SAACuC,GACfA,EAAMO,iBACN,IAAMC,EAAY3C,EAAQ4C,MAAK,SAAAzC,GAAM,OAAIA,EAAOX,OAASyB,KACnD4B,EAAY,CAChBrD,KAAMyB,EACNxB,OAAQ0B,GAGNwB,GAAaG,OAAOC,QAAP,UAAkB9B,EAAlB,2FAEfa,EACUe,GACPlE,MAAK,SAAAqE,GACJhC,EAAWhB,EAAQE,KAAI,SAAAC,GAAM,OAAIA,EAAOnB,KAAO2D,EAAU3D,GAAKmB,EAAS6C,MACvExB,EAAgBxB,EAAQE,KAAI,SAAAC,GAAM,OAAIA,EAAOnB,KAAO2D,EAAU3D,GAAKmB,EAAS6C,MAC5EpB,EAAoB,WAAD,OAAYiB,EAAUrD,OACzCyD,YAAW,WACTrB,EAAoB,QACnB,QACFsB,OAAM,SAAAC,GACPzB,EAAgByB,EAAMvE,SAASC,MAC/BoE,YAAW,WACTvB,EAAgB,QACf,QAKTI,EACQe,GACPlE,MAAK,SAAAyE,GACFpC,EAAWhB,EAAQqD,OAAOD,IAC1B5B,EAAgBxB,EAAQqD,OAAOD,IAC/BxB,EAAoB,SAAD,OAAUiB,EAAUrD,OACvCyD,YAAW,WACTrB,EAAoB,QACnB,QACJsB,OAAM,SAAAC,GACPzB,EAAgByB,EAAMvE,SAASC,KAAKsE,OACpCF,YAAW,WACTvB,EAAgB,QACf,WAmEH,uCACA,kBAAC,EAAD,CACE1B,QAASuB,EACTtB,eAvCe,SAACkC,GACpB,IAAM3C,EAAO2C,EAAMC,OAAOkB,QAAQ9D,KAClC,GAAIsD,OAAOC,QAAP,iBAAyBvD,EAAzB,MAAmC,CACrC,IAAMR,EAAKmD,EAAMC,OAAOkB,QAAQjD,IAChCyB,EACa9C,GACZL,MAAK,SAAA4E,GACJ,IAAMC,EAAcxD,EAAQuC,QAAO,SAAAkB,GAAC,OAAIA,EAAEzE,KAAOA,KACjDgC,EAAWwC,GACXhC,EAAgBgC,MACfN,OAAM,SAAAC,GACPzB,EAAgB,kBAAD,OACKlC,EADL,8CAGfyD,YAAW,WACTvB,EAAgB,QACf,cCjJXgC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.19906336.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deleteEntry = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => {\n    return response.data\n  })\n}\n\nexport default { getAll, create, update, deleteEntry }","import React, { useState, useEffect } from 'react'\nimport noteService from './services/notes_phonebook'\nimport './index.css'\n\nconst Filter = ({value, onChangeFunction}) => {\n  return (\n    <input value={value} onChange={onChangeFunction} />\n  )\n}\n\nconst PersonForm = ({name, number, nameOnChange, numberOnChange, onSubmission}) => {\n  return (\n    <div>\n      <form onSubmit={onSubmission}>\n        <div>\n        Name: <input value={name} onChange={nameOnChange} />\n        </div>\n        <div>\n        Number: <input value={number} onChange={numberOnChange} />\n        </div>\n        <button type=\"submit\">Add</button>\n      </form>\n    </div>\n  )\n}\n\nconst Persons = ({persons, deleteFunction}) => {\n  return (\n    <div>\n      {persons.map((person, i) => \n        <div key={i} style={{display: \"flex\"}}>\n          <p >{person.name} {person.number} </p>\n          <button \n          data-key={person.id} \n          data-name={person.name}\n          onClick={deleteFunction} \n          style={{height: \"20px\", marginLeft: \"10px\", marginTop: \"15px\"}}>Delete</button>\n        </div>\n        )}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ newSearch, setSearch] = useState('')\n  const [ peopleToShow, setVisibleNames] = useState(persons)\n  const [ errorMessage, setErrorMessage] = useState(null)\n  const [notificationName, setNotificationName] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n        setVisibleNames(initialPersons)\n      })\n  },  [])\n\n  const addName = (event) => {\n    event.preventDefault();\n    const nameMatch = persons.find(person => person.name === newName);\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    }  \n\n    if (nameMatch && window.confirm(`${newName} is already added to the phone book. \n    Replace the old number with the new number?`)) {\n      noteService\n        .update(newPerson)\n        .then(updatedPerson => {\n          setPersons(persons.map(person => person.id !== nameMatch.id ? person : updatedPerson))\n          setVisibleNames(persons.map(person => person.id !== nameMatch.id ? person : updatedPerson))\n          setNotificationName(`Updated ${newPerson.name}`)\n          setTimeout(() => {\n            setNotificationName(null)\n          }, 5000)\n        }).catch(error => {\n          setErrorMessage(error.response.data)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n      return;\n    } \n\n    noteService\n    .create(newPerson)\n    .then(addedPerson => {\n        setPersons(persons.concat(addedPerson))\n        setVisibleNames(persons.concat(addedPerson))\n        setNotificationName(`Added ${newPerson.name}`)\n        setTimeout(() => {\n          setNotificationName(null)\n        }, 5000)\n    }).catch(error => {\n      setErrorMessage(error.response.data.error)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    })\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearch = (event) => {\n    setSearch(event.target.value)\n    const searchTerm = event.target.value\n    const filteredPersons = persons.filter(person => person.name.toLowerCase().indexOf(searchTerm.toLowerCase()) === 0)\n    setVisibleNames(filteredPersons)\n  }\n\n  const Notification = ({ message, className }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className={className}>\n        {message}\n      </div>\n    )\n  }\n\n  const deleteNumber = (event) => {\n    const name = event.target.dataset.name\n    if (window.confirm(`Delete ${name}?`)) {\n      const id = event.target.dataset.key;\n      noteService\n      .deleteEntry(id)\n      .then(_ => {\n        const updatedList = persons.filter(n => n.id !== id)\n        setPersons(updatedList)\n        setVisibleNames(updatedList)\n      }).catch(error => {\n        setErrorMessage(\n          `Information of ${name} has already been removed from the server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n    }\n  }\n\n  return (\n    <div>\n      <Notification message={notificationName} className={\"notification\"}/>\n      <Notification message={errorMessage} className={\"error\"} />\n      <h2>Phonebook</h2>\n      <h3>Search the phonebook</h3>\n      <Filter value={newSearch} onChangeFunction={handleSearch} />\n      <h3>Add to the phonebook</h3>\n      <PersonForm \n        name={newName}\n        number={newNumber}\n        nameOnChange={handleNameChange}\n        numberOnChange={handleNumberChange}\n        onSubmission={addName}\n      />\n      <h2>Numbers</h2>\n      <Persons \n        persons={peopleToShow}\n        deleteFunction={deleteNumber}\n      />\n    </div>\n  )\n} \nexport default App ","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}